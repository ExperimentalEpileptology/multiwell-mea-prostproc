!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Python	nameref	/the original name for the tag/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Python	I,namespace	/name referring a module defined in other file/
!_TAG_KIND_DESCRIPTION!Python	Y,unknown	/name referring a class\/variable\/function\/module defined in other module/
!_TAG_KIND_DESCRIPTION!Python	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Python	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Python	i,module	/modules/
!_TAG_KIND_DESCRIPTION!Python	m,member	/class members/
!_TAG_KIND_DESCRIPTION!Python	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	0.0	/current.age/
!_TAG_PARSER_VERSION!Python	0.0	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/someusername/sync/workspace/nb_tue/4/multiwell-postproc/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20221218.0/
!_TAG_ROLE_DESCRIPTION!Python!module	imported	/imported modules/
!_TAG_ROLE_DESCRIPTION!Python!module	indirectlyImported	/module imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Python!module	namespace	/namespace from where classes\/variables\/functions are imported/
!_TAG_ROLE_DESCRIPTION!Python!unknown	imported	/imported from the other module/
!_TAG_ROLE_DESCRIPTION!Python!unknown	indirectlyImported	/classes\/variables\/functions\/modules imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
FigureCanvas	gui/steps/helper_widgets.py	/^from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas$/;"	Y	nameref:unknown:FigureCanvasQTAgg
NavigationToolbar	gui/steps/helper_widgets.py	/^from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT as NavigationToolbar$/;"	Y	nameref:unknown:NavigationToolbar2QT
__init__	core/datareader.py	/^    def __init__(self, filename):$/;"	m	class:abf_data
__init__	gui/main_wizard.py	/^    def __init__(self, parent=None):$/;"	m	class:ep_main_wizard
__init__	gui/steps/helper_widgets.py	/^    def __init__(self, parent=None):$/;"	m	class:_ep_mpl_plot_area
__init__	gui/steps/helper_widgets.py	/^    def __init__(self, parent=None):$/;"	m	class:ep_quickplot
__init__	gui/steps/helper_widgets.py	/^    def __init__(self, parent=None):$/;"	m	class:ep_quickplot_mpl
__init__	gui/steps/step.py	/^    def __init__(self, parent=None):$/;"	m	class:ep_step
__init__	gui/steps/step_load_single_file.py	/^    def __init__(self, parent=None):$/;"	m	class:ep_step_load_single_file
_ep_mpl_plot_area	gui/steps/helper_widgets.py	/^class _ep_mpl_plot_area(FigureCanvas):$/;"	c
_set_filestatus	gui/steps/step_load_single_file.py	/^    def _set_filestatus(self, text: str, status: bool):$/;"	m	class:ep_step_load_single_file
abf_data	core/datareader.py	/^class abf_data():$/;"	c
add_pages	gui/main_wizard.py	/^    def add_pages(self, pages):$/;"	m	class:ep_main_wizard
agg_cols	spikes_burst_networkburst.py	/^    agg_cols = ['Channel Label', 'Well Label']$/;"	v
app	main.py	/^    app = QtWidgets.QApplication(sys.argv)$/;"	v
args	spikes_burst_networkburst.py	/^    args = parse_args()$/;"	v
avg_burst_duration	spikes_burst_networkburst.py	/^    avg_burst_duration = bursts.groupby(agg_cols)['Duration [µs]'].mean().unstack()$/;"	v
avg_burst_duration	spikes_burst_networkburst.py	/^    avg_burst_duration = pd.DataFrame(index=channel_labels)$/;"	v
avg_inter_burst_interval	spikes_burst_networkburst.py	/^    avg_inter_burst_interval = bursts.groupby(agg_cols)['inter burst interval'].mean().unstack()$/;"	v
avg_inter_burst_interval	spikes_burst_networkburst.py	/^    avg_inter_burst_interval = pd.DataFrame(index=channel_labels)$/;"	v
avg_spike_count	spikes_burst_networkburst.py	/^    avg_spike_count = bursts.groupby(agg_cols)['Spike Count'].mean().unstack()$/;"	v
avg_spike_count	spikes_burst_networkburst.py	/^    avg_spike_count = pd.DataFrame(index=channel_labels)$/;"	v
avg_spike_freq	spikes_burst_networkburst.py	/^    avg_spike_freq = bursts.groupby(agg_cols)['Spike Frequency [Hz]'].mean().unstack()$/;"	v
avg_spike_freq	spikes_burst_networkburst.py	/^    avg_spike_freq = pd.DataFrame(index=channel_labels)$/;"	v
base	spikes_burst_networkburst.py	/^    base = args.base_dir$/;"	v
burst_counts	spikes_burst_networkburst.py	/^    burst_counts = bursts.groupby(['Channel Label', 'Well Label']).size().unstack(fill_value=0)./;"	v
burst_counts	spikes_burst_networkburst.py	/^    burst_counts = pd.DataFrame(index=channel_labels)$/;"	v
burst_counts_per_min	spikes_burst_networkburst.py	/^    burst_counts_per_min = burst_counts \/ mins_recorded$/;"	v
bursts	spikes_burst_networkburst.py	/^    bursts = pd.read_csv(bursts_file)$/;"	v
bursts_file	spikes_burst_networkburst.py	/^    bursts_file = os.path.join(base, bursts_fname)$/;"	v
bursts_fname	spikes_burst_networkburst.py	/^    bursts_fname = args.bursts_file$/;"	v
channel_labels	spikes_burst_networkburst.py	/^    channel_labels = spikes["Channel Label"].unique().tolist()$/;"	v
cond_label	spikes_burst_networkburst.py	/^    cond_label = "Cell Line\/Condition"$/;"	v
condition_labels	spikes_burst_networkburst.py	/^    condition_labels = []$/;"	v
conditions	spikes_burst_networkburst.py	/^        conditions = ast.literal_eval(f.read())$/;"	v
conditions_file	spikes_burst_networkburst.py	/^    conditions_file = os.path.join(base, conditions_fname)$/;"	v
conditions_fname	spikes_burst_networkburst.py	/^    conditions_fname = args.conditions_file$/;"	v
end_t	spikes_burst_networkburst.py	/^            end_t = bursts.loc[(i-1), 'End timestamp [µs]']$/;"	v
ep_main_wizard	gui/main_wizard.py	/^class ep_main_wizard(QtWidgets.QWizard):$/;"	c
ep_quickplot	gui/steps/helper_widgets.py	/^class ep_quickplot(QtWebEngineWidgets.QWebEngineView):$/;"	c
ep_quickplot_mpl	gui/steps/helper_widgets.py	/^class ep_quickplot_mpl(QtWidgets.QWidget):$/;"	c
ep_step	gui/steps/step.py	/^class ep_step(QtWidgets.QWizardPage):$/;"	c
ep_step_load_single_file	gui/steps/step_load_single_file.py	/^class ep_step_load_single_file(ep_step):$/;"	c
evalphys	README.md	/^# evalphys$/;"	c
file_list	main.py	/^    file_list = [r'D:\\XX_Temp\\abf_temp\\21517050 eEPSC.abf',$/;"	v
get_data	core/datareader.py	/^    def get_data(self):$/;"	m	class:abf_data
go	gui/steps/helper_widgets.py	/^import plotly.graph_objects as go$/;"	I	nameref:module:plotly.graph_objects
m	main.py	/^    m = ep_main_wizard()$/;"	v
mins_recorded	spikes_burst_networkburst.py	/^    mins_recorded = args.mins_recorded$/;"	v
nb_duration	spikes_burst_networkburst.py	/^    nb_duration = net_bursts.groupby(['Well Label'])['Duration [µs]'].mean()$/;"	v
nb_duration	spikes_burst_networkburst.py	/^    nb_duration = pd.DataFrame(columns=conditions.keys())$/;"	v
nb_numbers	spikes_burst_networkburst.py	/^    nb_numbers = net_bursts.groupby(['Well Label']).size().reindex(index=condition_labels, fill_/;"	v
nb_numbers	spikes_burst_networkburst.py	/^    nb_numbers = pd.DataFrame(columns=conditions.keys())$/;"	v
nb_sike_count	spikes_burst_networkburst.py	/^    nb_sike_count = pd.DataFrame(columns=conditions.keys())$/;"	v
nb_spike_count	spikes_burst_networkburst.py	/^    nb_spike_count = net_bursts.groupby(['Well Label'])['Spike Count'].mean()$/;"	v
nb_spike_freq	spikes_burst_networkburst.py	/^    nb_spike_freq = net_bursts.groupby(['Well Label'])['Spike Frequency [Hz]'].mean()$/;"	v
nb_spike_freq	spikes_burst_networkburst.py	/^    nb_spike_freq = pd.DataFrame(columns=conditions.keys())$/;"	v
net_bursts	spikes_burst_networkburst.py	/^    net_bursts = pd.read_csv(net_bursts_file)$/;"	v
net_bursts_file	spikes_burst_networkburst.py	/^    net_bursts_file = os.path.join(base, net_bursts_fname)$/;"	v
net_bursts_fname	spikes_burst_networkburst.py	/^    net_bursts_fname = args.net_bursts_file$/;"	v
np	core/datareader.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	spikes_burst_networkburst.py	/^import numpy as np$/;"	I	nameref:module:numpy
on_browse	gui/steps/step_load_single_file.py	/^    def on_browse(self):$/;"	m	class:ep_step_load_single_file
on_filename_changed	gui/steps/step_load_single_file.py	/^    def on_filename_changed(self, new_filename: str):$/;"	m	class:ep_step_load_single_file
out_base	spikes_burst_networkburst.py	/^    out_base = os.path.join(base, plate_name)$/;"	v
parse_args	spikes_burst_networkburst.py	/^def parse_args():$/;"	f
pd	spikes_burst_networkburst.py	/^import pandas as pd$/;"	I	nameref:module:pandas
plate_name	spikes_burst_networkburst.py	/^    plate_name = '_'.join(os.path.basename(spikes_file).split('_')[0:-1])$/;"	v
plot	gui/steps/helper_widgets.py	/^    def plot(self, data):$/;"	m	class:ep_quickplot
plot	gui/steps/helper_widgets.py	/^    def plot(self, data):$/;"	m	class:ep_quickplot_mpl
plot_data	gui/steps/helper_widgets.py	/^    def plot_data(self, data):$/;"	m	class:_ep_mpl_plot_area
plt	gui/steps/helper_widgets.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	spikes_burst_networkburst.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
random_spikes_ratio	spikes_burst_networkburst.py	/^    random_spikes_ratio = pd.DataFrame(index=channel_labels)$/;"	v
sns	spikes_burst_networkburst.py	/^import seaborn as sns$/;"	I	nameref:module:seaborn
spike_counts	spikes_burst_networkburst.py	/^    spike_counts = pd.DataFrame(index=channel_labels)$/;"	v
spike_counts	spikes_burst_networkburst.py	/^    spike_counts = spikes.groupby(['Channel Label', 'Well Label']).size().unstack(fill_value=0)./;"	v
spike_counts_per_min	spikes_burst_networkburst.py	/^    spike_counts_per_min = spike_counts \/ mins_recorded$/;"	v
spikes	spikes_burst_networkburst.py	/^    spikes = pd.read_csv(spikes_file)$/;"	v
spikes_file	spikes_burst_networkburst.py	/^    spikes_file = os.path.join(base, spikes_fname)$/;"	v
spikes_fname	spikes_burst_networkburst.py	/^    spikes_fname = args.spikes_file$/;"	v
spon_spike_counts	spikes_burst_networkburst.py	/^    spon_spike_counts = pd.DataFrame(index=channel_labels)$/;"	v
spon_spike_counts	spikes_burst_networkburst.py	/^    spon_spike_counts = spike_counts - burst_counts$/;"	v
spon_spike_ratio	spikes_burst_networkburst.py	/^    spon_spike_ratio = (spon_spike_counts \/ spike_counts * 100).fillna(0)$/;"	v
start_t	spikes_burst_networkburst.py	/^            start_t = bursts.loc[i, "Start timestamp [µs]"]$/;"	v
step	main.py	/^    step = ep_step_load_single_file()$/;"	v
sweep	core/datareader.py	/^class sweep:$/;"	c
sweep_data	core/datareader.py	/^class sweep_data:$/;"	c
unneeded_cols	spikes_burst_networkburst.py	/^    unneeded_cols = ['Compound ID', 'Compound Name', 'Experiment',$/;"	v
well_label	spikes_burst_networkburst.py	/^            well_label = arr['Well Label']$/;"	v
